<Scripts>
  <Script name="Twitter">Components.utils.import('resource://firesheep/util/RailsHelper.js');

register({
  domains: [ 'twitter.com' ],
  sessionCookieNames: [ '_twitter_sess', 'auth_token' ],

  processPacket: function () {
    var cookie = this.firstPacket.cookies['_twitter_sess'];
    if (!cookie) return;

    var railsSession = RailsHelper.parseSessionCookie(cookie);

    // A Twitter session cookie contains information other than just user id,
    // and is constantly changing. Override ID to include only user info, 
    // avoiding duplicate results for the same person.
    this.id = railsSession.user + railsSession.password_token;
    
    // Store around for debugging purposes.
    this.firstPacket._twitter_sess = railsSession;
  },

  identifyUser: function () {
    var resp = this.httpGet(this.siteUrl);
    if (resp.body.querySelector('#me_name')) {    
      // Old Twitter
      this.userName   = resp.body.querySelector('#me_name').innerHTML;
      this.userAvatar = resp.body.querySelector('.user_icon img').src;
    } else {
      // New Twitter
      this.userName   = resp.body.querySelector('#screen-name').innerHTML.replace(/^\s+|\s+$/g, "");
      this.userAvatar = resp.body.querySelector('#profile-image img').src;
    }
  }
});</Script>
  <Script name="Foursquare">register({
  domains: [ 'foursquare.com' ],
  sessionCookieNames: [ 'ext_id', 'XSESSIONID' ],
  
  processPacket: function () {
    var cookie = this.firstPacket.cookies['ext_id'];
    this.id = cookie;
  },

  identifyUser: function () {
    var resp = this.httpGet('http://foursquare.com/user');
    var path = resp.request.channel.URI.path;
    var userId = path.split('/')[2];

    this.userId = userId;
    this.userName   = resp.body.querySelectorAll('.withImage a')[1].innerHTML
    this.userAvatar = resp.body.querySelector('.withImage img').src;
    if (this.userAvatar.substr(0, 4) != 'http') {
     this.userAvatar = 'http://foursquare.com/' + this.userAvatar;
    }
  },
})</Script>
  <Script name="HackerNews">register({
  domains: [ 'news.ycombinator.com' ],
  sessionCookieNames: [ 'user' ],

  identifyUser: function() {
    var resp = this.httpGet(this.siteUrl);
    this.userName = resp.body.querySelectorAll(".pagetop a")[7].innerHTML;
  }
})</Script>
  <Script name="Enom">register({
  domains: [ 'enom.com' ],
  sessionCookieNames: [ 'OatmealCookie', 'EmailAddress' ],

  identifyUser: function () {
    this.userName = this.firstPacket.cookies['OatmealCookie'].split(';')[0];
  }
})</Script>
  <Script name="Facebook">register({
  domains: [ 'facebook.com' ],
  sessionCookieNames: [ 'xs', 'c_user', 'sid' ],

  identifyUser: function () {
    var resp = this.httpGet('http://www.facebook.com/home.php');
    this.userName = resp.body.querySelector('#navAccountName').innerHTML;
    this.userAvatar = resp.body.querySelector('#navAccountPic img').src;
  }
})</Script>
  <Script name="Harvest">register({
  sessionCookieNames: [ '_enc_sess' ],
  domains: [ 'harvestapp.com' ],

  processPacket: function () {
    this.siteUrl = 'http://' + this.firstPacket.host;

    var cookie = this.firstPacket.cookies['_enc_sess'];
    var railsSession = RailsHelper.parseSessionCookie(cookie);
    this.id = railsSession.session_id;
    this.firstPacket._enc_sess = railsSession;
  },

  identifyUser: function () {
    var resp = this.httpGet(this.siteUrl);
    var user    = resp.body.querySelector("#login-info").firstChild.textContent.trim();
    var company = resp.body.querySelector('#company-name').textContent.trim();

    this.userName = user + ' (' + company + ')';
  }
});</Script>
  <Script name="Pivotal">register({
//  sessionCookieNames: [ '_myapp_session', 'auth_token' ],
  sessionCookieNames: [ '_myapp_session' ],
  domains: [ 'pivotaltracker.com' ],

  processPacket: function () {
    var cookie = this.firstPacket.cookies['_myapp_session'];
    var railsSession = RailsHelper.parseSessionCookie(cookie);
    
    if (!railsSession.signin_person_id) {
      this.session = null;
      return;
    }

    this.id = railsSession.session_id;

    this.firstPacket._myapp_session = railsSession;
  },

  identifyUser: function () {
    var resp = this.httpGet('http://www.pivotaltracker.com/dashboard');
    this.userName = resp.body.querySelector('.welcome_message').textContent.replace('Welcome,', '').trim();
  }
});</Script>
  <Script name="GitHub">register({
  domains: [ 'github.com' ],
  sessionCookieNames: [ '_github_ses' ],

  processPacket: function () {
    var cookie = this.firstPacket.cookies['_github_ses'];
    var railsSession = RailsHelper.parseSessionCookie(cookie);
    if (!railsSession.user) {
      this.session = null;
      return;
    }
    this.id = railsSession.fingerprint;
    this.firstPacket._github_ses = railsSession;
  },

  identifyUser: function () {
    var resp = this.httpGet(this.siteUrl);
    this.userName = resp.body.querySelector('.name').textContent;
    this.userAvatar = resp.body.querySelector('.avatarname img').src;
  }
});</Script>
  <Script name="Basecamp">register({
  sessionCookieNames: [ "_basecamp_session", "session_token" ],
  domains: [ 'basecamphq.com' ],

  processPacket: function () {
    this.siteUrl = 'http://' + this.firstPacket.host;
    this.siteName = 'Basecamp (' + this.firstPacket.host.split('.')[0] + ')';

    var cookie = this.firstPacket.cookies['_basecamp_session'];
    var railsSession = RailsHelper.parseSessionCookie(cookie);
    if (!railsSession.user_id) {
      this.session = null;
      return;
    }
    this.id = railsSession.session_id;
    this.firstPacket._basecamp_session = railsSession;
  },
  
  identifyUser: function () {
    var resp = this.httpGet(this.siteUrl + '/identity/edit');
    this.userName = resp.body.querySelector('#settings_signout_and_help .name').textContent;
  }
});</Script>
</Scripts>